{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.services\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.loginService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/register']);\n      return false;\n    }\n  }\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,YAA0B,EAClCC,MAAc;IADN,iBAAY,GAAZD,YAAY;IACpB,WAAM,GAANC,MAAM;EACb;EAELC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACjE,IAAI,IAAI,CAACJ,YAAY,CAACK,UAAU,EAAE,EAAE;MAClC,OAAO,IAAI;KAChB,MAAM;MACL,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;MACnC,OAAO,KAAK;;EAEhB;;AAbaR,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAS,SAAhBT,gBAAgB;EAAAU,YAFf;AAAM","names":["AuthGuardService","constructor","loginService","router","canActivate","route","state","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Roberth\\BlogEngineFront\\src\\services\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private loginService: LoginService,\n      private router: Router) \n     { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n      if (this.loginService.isLoggedIn()) {\n        return true;\n  } else {\n    this.router.navigate(['/register']);\n    return false;\n  }\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
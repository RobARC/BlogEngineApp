{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport { User } from 'src/models/User.model';\nimport { RegisterService } from 'src/services/register.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/services/register.service\";\nimport * as i3 from \"@angular/common\";\nfunction RegisterComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rol_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", rol_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(rol_r1);\n  }\n}\nexport class RegisterComponent {\n  constructor(fb, registerService) {\n    this.fb = fb;\n    this.registerService = registerService;\n    this.user = new User();\n    this.registerForm = new FormGroup({});\n    this.Roles = [\"Public\", \"Writer\", \"Editor\"];\n    this.IdRoles = [1, 2, 3];\n    this.checkoutForm = fb.group({\n      userName: \"\",\n      role: \"\",\n      email: \"\",\n      password: \"\",\n      idRole: 0\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    // Process fillout data here\n    this.user.UserName = this.checkoutForm.value.userName;\n    this.user.Role = this.checkoutForm.value.role;\n    this.user.Email = this.checkoutForm.value.email;\n    this.user.Password = this.checkoutForm.value.password;\n    this.user.IdRole = this.checkoutForm.value.idRole;\n    const data = this.checkoutForm.value;\n    //prueba enviando data\n    console.table(data);\n    try {\n      this.registerService.PostUsers(data);\n      alert(\"Registration Successful\");\n      //this.registerService.getUsers();\n    } catch (error) {\n      console.log(error);\n      alert(\"Registration Failed\");\n    }\n    this.checkoutForm.reset();\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RegisterService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  features: [i0.ɵɵProvidersFeature([RegisterService])],\n  decls: 19,\n  vars: 2,\n  consts: [[1, \"container\"], [\"method\", \"post\", 1, \"form-register\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-register-heading\"], [\"for\", \"UserName\", 1, \"sr-only\"], [\"id\", \"userName\", \"type\", \"text\", \"formControlName\", \"userName\", \"placeholder\", \"User Name\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"Email\", 1, \"sr-only\"], [\"id\", \"Email\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email address\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"Password\", 1, \"sr-only\"], [\"id\", \"Password\", \"type\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"Role\", 1, \"sr-only\"], [\"id\", \"Role\", \"formControlName\", \"role\", \"required\", \"\", 1, \"form-control\", \"Role\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\"], [3, \"value\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"h2\", 2);\n      i0.ɵɵtext(3, \"Please Sing up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementStart(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementStart(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"select\", 10);\n      i0.ɵɵtemplate(16, RegisterComponent_option_16_Template, 2, 2, \"option\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 12);\n      i0.ɵɵtext(18, \"Sign Up\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Roles);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".form-register[_ngcontent-%COMP%] {\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n  .form-register[_ngcontent-%COMP%]   .form-register-heading[_ngcontent-%COMP%], .form-register[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  .form-register[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%] {\\r\\n    font-weight: 400;\\r\\n  }\\r\\n  .form-register[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    box-sizing: border-box;\\r\\n    height: auto;\\r\\n    padding: 10px;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  .form-register[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus {\\r\\n    z-index: 2;\\r\\n  }\\r\\n  .form-register[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%] {\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-right-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\\r\\n  .form-register[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    border-top-right-radius: 0;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGNBQWM7RUFDaEI7RUFDQTs7SUFFRSxtQkFBbUI7RUFDckI7RUFDQTtJQUNFLGdCQUFnQjtFQUNsQjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osYUFBYTtJQUNiLGVBQWU7RUFDakI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3Qiw0QkFBNEI7RUFDOUI7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsMEJBQTBCO0VBQzVCIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tcmVnaXN0ZXIge1xyXG4gICAgbWF4LXdpZHRoOiAzMzBweDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICB9XHJcbiAgLmZvcm0tcmVnaXN0ZXIgLmZvcm0tcmVnaXN0ZXItaGVhZGluZyxcclxuICAuZm9ybS1yZWdpc3RlciAuY2hlY2tib3gge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgLmZvcm0tcmVnaXN0ZXIgLmNoZWNrYm94IHtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgfVxyXG4gIC5mb3JtLXJlZ2lzdGVyIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gIC5mb3JtLXJlZ2lzdGVyIC5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG4gICAgei1pbmRleDogMjtcclxuICB9XHJcbiAgLmZvcm0tcmVnaXN0ZXIgaW5wdXRbdHlwZT1cImVtYWlsXCJdIHtcclxuICAgIG1hcmdpbi1ib3R0b206IC0xcHg7XHJcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcclxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XHJcbiAgfVxyXG4gIC5mb3JtLXJlZ2lzdGVyIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcclxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xyXG4gIH1cclxuICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,QAAsB,gBAAgB;AACxD,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,eAAe,QAAQ,+BAA+B;;;;;;;ICezDC,kCAAgD;IAAAA,YAAO;IAAAA,iBAAS;;;;IAA9BA,8BAAa;IAACA,eAAO;IAAPA,4BAAO;;;ADH7D,OAAM,MAAOC,iBAAiB;EAM5BC,YACUC,EAAe,EACfC,eAAgC;IADhC,OAAE,GAAFD,EAAE;IACF,oBAAe,GAAfC,eAAe;IALzB,SAAI,GAAS,IAAIN,IAAI,EAAE;IAkBhB,iBAAY,GAAc,IAAID,SAAS,CAAC,EAAE,CAAC;IAGlD,UAAK,GAAG,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE;IACxC,YAAO,GAAG,CAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC;IAfjB,IAAI,CAACQ,YAAY,GAAGF,EAAE,CAACG,KAAK,CAAC;MACzBC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;KACP,CAAC;EACR;EAEFC,QAAQ,IAAW;EAQnBC,QAAQ;IACN;IACA,IAAI,CAACC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACV,YAAY,CAACW,KAAK,CAACT,QAAQ;IACrD,IAAI,CAACO,IAAI,CAACG,IAAI,GAAG,IAAI,CAACZ,YAAY,CAACW,KAAK,CAACR,IAAI;IAC7C,IAAI,CAACM,IAAI,CAACI,KAAK,GAAG,IAAI,CAACb,YAAY,CAACW,KAAK,CAACP,KAAK;IAC/C,IAAI,CAACK,IAAI,CAACK,QAAQ,GAAG,IAAI,CAACd,YAAY,CAACW,KAAK,CAACN,QAAQ;IACrD,IAAI,CAACI,IAAI,CAACM,MAAM,GAAG,IAAI,CAACf,YAAY,CAACW,KAAK,CAACL,MAAM;IAEjD,MAAMU,IAAI,GAAG,IAAI,CAAChB,YAAY,CAACW,KAAK;IAEpC;IACAM,OAAO,CAACC,KAAK,CAACF,IAAI,CAAC;IAEnB,IAAI;MACF,IAAI,CAACjB,eAAe,CAACoB,SAAS,CAACH,IAAI,CAAC;MAEnCI,KAAK,CAAC,yBAAyB,CAAC;MAEjC;KAED,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACK,GAAG,CAACD,KAAK,CAAC;MAClBD,KAAK,CAAC,qBAAqB,CAAC;;IAE9B,IAAI,CAACpB,YAAY,CAACuB,KAAK,EAAE;EAE3B;;AArDW3B,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAA4B;EAAAC,iCAHjB,CAAC/B,eAAe,CAAC;EAAAgC;EAAAC;EAAAC;EAAAC;IAAA;MCZ9BlC,8BAAuB;MACkCA;QAAA,OAAYmC,cAAU;MAAA,EAAC;MAE5EnC,6BAAkC;MAAAA,8BAAc;MAAAA,iBAAK;MAGrDA,gCAAsC;MAAAA,yBAAS;MAAAA,iBAAQ;MACvDA,2BACiC;MAE/BA,gCAAmC;MAAAA,6BAAa;MAAAA,iBAAQ;MACxDA,2BACW;MACXA,iCAAsC;MAAAA,yBAAQ;MAAAA,iBAAQ;MACtDA,4BAAuI;MAEzIA,iCAAkC;MAAAA,qBAAI;MAAAA,iBAAQ;MAC9CA,mCAA6E;MAC3EA,2EAAgE;MAClEA,iBAAS;MAGTA,mCAAgE;MAAAA,wBAAO;MAAAA,iBAAS;;;MArB5EA,eAA0B;MAA1BA,4CAA0B;MAiBJA,gBAAQ;MAARA,mCAAQ","names":["FormGroup","User","RegisterService","i0","RegisterComponent","constructor","fb","registerService","checkoutForm","group","userName","role","email","password","idRole","ngOnInit","onSubmit","user","UserName","value","Role","Email","Password","IdRole","data","console","table","PostUsers","alert","error","log","reset","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Roberth\\source\\repos\\BlogEngineApp\\BlogEngineFront\\src\\components\\register\\register.component.ts","C:\\Users\\Roberth\\source\\repos\\BlogEngineApp\\BlogEngineFront\\src\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder } from '@angular/forms';\nimport { User } from 'src/models/User.model';\nimport { RegisterService } from 'src/services/register.service';\nimport { Role } from '../../models/role.model';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  providers: [RegisterService],\n})\n\nexport class RegisterComponent implements OnInit  {\n\n  checkoutForm: any;\n  user: User = new User();\n  router: any;\n\n  constructor (\n    private fb: FormBuilder,\n    private registerService: RegisterService,\n  ) { \n      this.checkoutForm = fb.group({\n          userName: \"\",\n          role: \"\",\n          email: \"\",\n          password: \"\",\n          idRole: 0,\n          });\n    }\n    \n  ngOnInit(): void { };\n\n  public registerForm: FormGroup = new FormGroup({});\n  public event: { preventDefault: () => void; } | undefined;\n  \n  Roles = [ \"Public\", \"Writer\", \"Editor\" ];\n  IdRoles = [ 1, 2 , 3]\n\n  onSubmit() {\n    // Process fillout data here\n    this.user.UserName = this.checkoutForm.value.userName;\n    this.user.Role = this.checkoutForm.value.role;\n    this.user.Email = this.checkoutForm.value.email;\n    this.user.Password = this.checkoutForm.value.password;\n    this.user.IdRole = this.checkoutForm.value.idRole;\n  \n    const data = this.checkoutForm.value;\n\n    //prueba enviando data\n    console.table(data);\n\n    try {\n      this.registerService.PostUsers(data);\n\n       alert(\"Registration Successful\");\n     \n      //this.registerService.getUsers();\n\n    } catch (error) {\n      console.log(error);\n      alert(\"Registration Failed\");\n    }\n    this.checkoutForm.reset();\n    \n  }\n}\n\n","<div class=\"container\">\n  <form [formGroup]=\"checkoutForm\" class=\"form-register\" (ngSubmit)=\"onSubmit()\" method=\"post\">\n\n    <h2 class=\"form-register-heading\">Please Sing up</h2>\n\n\n    <label for=\"UserName\" class=\"sr-only\">User Name</label>\n    <input id=\"userName\" type=\"text\" formControlName=\"userName\"  class=\"form-control\" \n    placeholder=\"User Name\" required>\n\n      <label for=\"Email\" class=\"sr-only\">Email address</label>\n      <input id=\"Email\" type=\"email\" formControlName=\"email\"   class=\"form-control\" placeholder=\"Email address\"\n        required>\n      <label for=\"Password\" class=\"sr-only\">Password</label>\n      <input id=\"Password\" type=\"password\" name=\"password\"   class=\"form-control\" formControlName=\"password\" placeholder=\"Password\" required>\n\n    <label for=\"Role\" class=\"sr-only\">Role</label>\n    <select id=\"Role\" class=\"form-control Role\"  formControlName=\"role\" required>\n      <option *ngFor=\"let rol of Roles\" [value]=\"rol\">{{rol}}</option>\n    </select>\n\n    \n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" >Sign Up</button>\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Roberth/source/repos/BlogEngineApp/BlogEngineFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { User } from 'src/models/User.model';\nimport { LoginService } from 'src/services/login.services';\nimport { Login } from '../../models/login.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/services/login.services\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_span_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo email es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_span_9_span_1_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.checkLoginForm.get(\"email\").errors.required);\n  }\n}\nfunction LoginComponent_span_14_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo password es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_span_14_span_1_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkLoginForm.get(\"password\").errors.required);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"has-error\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(fb, loginService, router) {\n    this.fb = fb;\n    this.loginService = loginService;\n    this.router = router;\n    this.user = new User();\n    this.listUsers = [];\n    this.routeHome = '';\n    this.login = new Login();\n    this.tokenExpiration = '';\n  }\n  ngOnInit() {\n    this.checkLoginForm = this.fb.group({\n      email: \"\",\n      password: \"\"\n    });\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let loginInterface = Object.assign({}, _this.checkLoginForm.value);\n      (yield _this.loginService.LoginUsers(loginInterface)).subscribe(token => _this.getToken(token)), error => _this.errorMessage(error);\n      _this.checkLoginForm.reset();\n    })();\n  }\n  getToken(token) {\n    console.log(token);\n    localStorage.setItem('token', token.token);\n    localStorage.setItem('tokenExpiration', this.tokenExpiration);\n    this.router.navigate(['home']);\n  }\n  errorMessage(error) {\n    if (error && error.error) {\n      alert(error.error[\"\"]);\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  features: [i0.ɵɵProvidersFeature([LoginService])],\n  decls: 21,\n  vars: 10,\n  consts: [[1, \"container\"], [\"method\", \"get\", 1, \"form-signin\", 3, \"formGroup\"], [1, \"form-signin-heading\"], [1, \"form-group\", 3, \"ngClass\"], [\"for\", \"inputEmail\", 1, \"sr-only\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"inputEmail\", \"placeholder\", \"Email\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"inputPassword\", 1, \"sr-only\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [1, \"checkbox\"], [\"type\", \"checkbox\", \"value\", \"remember-me\"], [\"type\", \"button\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\", 3, \"disabled\", \"click\"], [1, \"help-block\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"fieldset\")(3, \"h2\", 2);\n      i0.ɵɵtext(4, \"Please Sing In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵtemplate(9, LoginComponent_span_9_Template, 2, 1, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵtemplate(14, LoginComponent_span_14_Template, 2, 1, \"span\", 6);\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"label\");\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵtext(18, \" Remember me \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(20, \"Sign in\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkLoginForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, (ctx.checkLoginForm.get(\"email\").touched || ctx.checkLoginForm.get(\"email\").dirty) && !ctx.checkLoginForm.get(\"email\").valid));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", (ctx.checkLoginForm.get(\"email\").touched || ctx.checkLoginForm.get(\"email\").dirty) && ctx.checkLoginForm.get(\"email\").errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, (ctx.checkLoginForm.get(\"password\").touched || ctx.checkLoginForm.get(\"password\").dirty) && !ctx.checkLoginForm.get(\"password\").valid));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", (ctx.checkLoginForm.get(\"password\").touched || ctx.checkLoginForm.get(\"password\").dirty) && ctx.checkLoginForm.get(\"password\").errors);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", !ctx.checkLoginForm);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".form-signin[_ngcontent-%COMP%] {\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   .form-signin-heading[_ngcontent-%COMP%], .form-signin[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%] {\\r\\n    font-weight: 400;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    box-sizing: border-box;\\r\\n    height: auto;\\r\\n    padding: 10px;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus {\\r\\n    z-index: 2;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%] {\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-right-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    border-top-right-radius: 0;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGNBQWM7RUFDaEI7RUFDQTs7SUFFRSxtQkFBbUI7RUFDckI7RUFDQTtJQUNFLGdCQUFnQjtFQUNsQjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osYUFBYTtJQUNiLGVBQWU7RUFDakI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3Qiw0QkFBNEI7RUFDOUI7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsMEJBQTBCO0VBQzVCIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tc2lnbmluIHtcclxuICAgIG1heC13aWR0aDogMzMwcHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiAuZm9ybS1zaWduaW4taGVhZGluZyxcclxuICAuZm9ybS1zaWduaW4gLmNoZWNrYm94IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiAuY2hlY2tib3gge1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICB9XHJcbiAgLmZvcm0tc2lnbmluIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiAuZm9ybS1jb250cm9sOmZvY3VzIHtcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLTFweDtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcclxuICB9XHJcbiAgLmZvcm0tc2lnbmluIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcclxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,YAAY,QAAQ,6BAA6B;AAI1D,SAASC,KAAK,QAAQ,0BAA0B;;;;;;;;ICI5BC,4BAA0D;IACtDA,6CACJ;IAAAA,iBAAO;;;;;IAJXA,gCAC6H;IACzHA,yEAEO;IACXA,iBAAO;;;;IAHIA,eAAiD;IAAjDA,yEAAiD;;;;;IAaxDA,4BAA6D;IACzDA,gDACJ;IAAAA,iBAAO;;;;;IAJXA,gCACsI;IAClIA,0EAEO;IACXA,iBAAO;;;;IAHIA,eAAoD;IAApDA,4EAAoD;;;;;;;;ADR/E,OAAM,MAAOC,cAAc;EAYzBC,YACUC,EAAe,EACfC,YAA0B,EAC1BC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IAbhB,SAAI,GAAS,IAAIR,IAAI,EAAE;IACvB,cAAS,GAAgB,EAAE;IAC3B,cAAS,GAAW,EAAE;IACtB,UAAK,GAAW,IAAIE,KAAK,EAAE;IAC3B,oBAAe,GAAW,EAAE;EAUxB;EAEJO,QAAQ;IACN,IAAI,CAACC,cAAc,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAClCC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACZ,CAAC;EACH;EAEMC,QAAQ;IAAA;IAAA;MAEZ,IAAIC,cAAc,GAAmBC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE,KAAI,CAACP,cAAc,CAACQ,KAAK,CAAC;MAEjF,OAAO,KAAI,CAACX,YAAY,CAACY,UAAU,CAACJ,cAAc,CAAC,EAAEK,SAAS,CAACC,KAAK,IAAI,KAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,CAAC,EAC1FE,KAAU,IAAK,KAAI,CAACC,YAAY,CAACD,KAAK,CAAC;MAExC,KAAI,CAACb,cAAc,CAACe,KAAK,EAAE;IAAA;EAE7B;EAEAH,QAAQ,CAACD,KAAyB;IAChCK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;IAClBO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,KAAK,CAACA,KAAK,CAAC;IAC1CO,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAACC,eAAe,CAAC;IAC7D,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;EAChC;EAEAP,YAAY,CAACD,KAAU;IACnB,IAAIA,KAAK,IAAIA,KAAK,CAACA,KAAK,EAAE;MAC1BS,KAAK,CAACT,KAAK,CAACA,KAAK,CAAC,EAAE,CAAC,CAAC;;EAE1B;;AA/CSnB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA6B;EAAAC,iCAFd,CAACjC,YAAY,CAAC;EAAAkC;EAAAC;EAAAC;EAAAC;IAAA;MCd3BnC,8BAAuB;MAGqBA,8BAAc;MAAAA,iBAAK;MACnDA,8BACiJ;MACrGA,qBAAK;MAAAA,iBAAQ;MACrDA,2BACa;MACbA,iEAKO;MACXA,iBAAM;MAENA,+BAC0J;MAC3GA,yBAAQ;MAAAA,iBAAQ;MAC3DA,4BACoC;MACpCA,mEAKO;MACPA,+BAAsB;MAEhBA,6BAA2C;MAACA,8BAC9C;MAAAA,iBAAQ;MAEZA,mCACyB;MAArBA;QAAA,OAASoC,cAAU;MAAA,EAAC;MAACpC,wBAAO;MAAAA,iBAAS;;;MAjC/CA,eAA4B;MAA5BA,8CAA4B;MAItBA,eAA4I;MAA5IA,kLAA4I;MAKvIA,eAAsH;MAAtHA,mJAAsH;MAQ3HA,eAAqJ;MAArJA,2LAAqJ;MAKhJA,eAA+H;MAA/HA,4JAA+H;MAUrEA,eAA4B;MAA5BA,8CAA4B","names":["User","LoginService","Login","i0","LoginComponent","constructor","fb","loginService","router","ngOnInit","checkLoginForm","group","email","password","onSubmit","loginInterface","Object","assign","value","LoginUsers","subscribe","token","getToken","error","errorMessage","reset","console","log","localStorage","setItem","tokenExpiration","navigate","alert","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Roberth\\source\\repos\\BlogEngineApp\\BlogEngineFront\\src\\components\\login\\login.component.ts","C:\\Users\\Roberth\\source\\repos\\BlogEngineApp\\BlogEngineFront\\src\\components\\login\\login.component.html"],"sourcesContent":["import { Component , OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder } from '@angular/forms';\nimport { User } from 'src/models/User.model';\nimport { LoginService } from 'src/services/login.services';\nimport { Router } from '@angular/router';\nimport { LoginInterface } from './login.class';\n\nimport { Login } from '../../models/login.model';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [LoginService],\n})\nexport class LoginComponent implements OnInit  {\n  checkLoginForm: any;\n  user: User = new User();\n  listUsers: Array<User> = [];\n  routeHome: string = '';\n  login : Login = new Login();\n  tokenExpiration: string = '';\n\n  email!: string;\n  password!: string;\n  \n  \n  constructor (\n    private fb: FormBuilder,\n    private loginService: LoginService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void { \n    this.checkLoginForm = this.fb.group({\n      email: \"\",\n      password: \"\",\n   });\n  };\n\n  async onSubmit() {\n\n    let loginInterface: LoginInterface = Object.assign({}, this.checkLoginForm.value);\n\n    (await this.loginService.LoginUsers(loginInterface)).subscribe(token => this.getToken(token)),\n      (error: any) => this.errorMessage(error)\n      \n      this.checkLoginForm.reset()\n    \n    }\n\n    getToken(token: { token: string; }) {\n      console.log(token);\n      localStorage.setItem('token', token.token);\n      localStorage.setItem('tokenExpiration', this.tokenExpiration);\n      this.router.navigate(['home']);\n    }\n\n    errorMessage(error: any) {\n        if (error && error.error) {\n        alert(error.error[\"\"]);\n      }\n    }\n\n  }\n\n  \n \n\n\n\n\n\n\n","<div class=\"container\">\n    <form [formGroup]=\"checkLoginForm\" class=\"form-signin\" method=\"get\">\n        <fieldset>\n            <h2 class=\"form-signin-heading\">Please Sing In</h2>\n            <div class=\"form-group\"\n                [ngClass]=\"{'has-error': (checkLoginForm.get('email').touched || checkLoginForm.get('email').dirty) && !checkLoginForm.get('email').valid }\">\n                <label for=\"inputEmail\" class=\"sr-only\">Email</label>\n                <input type=\"email\" formControlName=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email\"\n                    required>\n                <span class=\"help-block\"\n                    *ngIf=\"(checkLoginForm.get('email').touched || checkLoginForm.get('email').dirty) && checkLoginForm.get('email').errors\">\n                    <span *ngIf=\"checkLoginForm.get('email').errors.required\">\n                        El campo email es requerido\n                    </span>\n                </span>\n            </div>\n\n            <div class=\"form-group\"\n                [ngClass]=\"{'has-error': (checkLoginForm.get('password').touched || checkLoginForm.get('password').dirty) && !checkLoginForm.get('password').valid }\">\n                <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n                <input type=\"password\" formControlName=\"password\" id=\"inputPassword\" class=\"form-control\"\n                    placeholder=\"Password\" required>\n                <span class=\"help-block\"\n                    *ngIf=\"(checkLoginForm.get('password').touched || checkLoginForm.get('password').dirty) && checkLoginForm.get('password').errors\">\n                    <span *ngIf=\"checkLoginForm.get('password').errors.required\">\n                        El campo password es requerido\n                    </span>\n                </span>\n                <div class=\"checkbox\">\n                    <label>\n                      <input type=\"checkbox\" value=\"remember-me\"> Remember me\n                    </label>\n                  </div>\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"button\" [disabled]=\"!checkLoginForm\"\n                    (click)=\"onSubmit()\">Sign in</button>\n\n            </div>\n        </fieldset>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
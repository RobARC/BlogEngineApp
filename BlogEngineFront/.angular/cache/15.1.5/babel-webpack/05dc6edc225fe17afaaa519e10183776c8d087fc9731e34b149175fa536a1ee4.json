{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Roberth/BlogEngineFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Post } from 'src/models/post.model';\nimport { PostService } from '../../services/post.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/post.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction PostComponent_span_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \" Field tilte is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtemplate(1, PostComponent_span_7_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.checkoutForm.get(\"title\").errors.required);\n  }\n}\nfunction PostComponent_span_13_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \" Field content is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtemplate(1, PostComponent_span_13_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkoutForm.get(\"content\").errors.required);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"has-error\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/home\"];\n};\nexport class PostComponent {\n  constructor(fb, postService, activatedRoute) {\n    this.fb = fb;\n    this.postService = postService;\n    this.activatedRoute = activatedRoute;\n    this.post = new Post();\n    this.router = new Router();\n    this.editMode = false;\n    this.today = Date.now();\n    this.date = new Date(this.today);\n    this.checkoutForm = this.fb.group({\n      id: 0,\n      title: \"\",\n      content: \"\",\n      createdAt: this.date,\n      status: \"Created\",\n      author: \"\"\n    });\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      if (params['id'] === undefined) {\n        return;\n      }\n      this.editMode = true;\n      this.postId = Number(params['id']);\n      this.getDataById(this.postId.toString());\n    });\n  }\n  getDataById(id) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      //console.log(id);\n      (yield _this.postService.getPosts(id)).subscribe(resp => {\n        _this.getDataForm(resp), error => console.error(error);\n      });\n    })();\n  }\n  getDataForm(data) {\n    //var dp = new DatePipe(navigator.language);\n    //var format = \"dd-MM-yyyy\";\n    this.checkoutForm.patchValue({\n      id: data.id,\n      title: data.title,\n      content: data.content,\n      createdAt: data.createdAt,\n      status: data.status,\n      author: data.author\n    });\n  }\n  onSubmit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      //Process fillout data here\n      _this2.post.Id = _this2.checkoutForm.value.id;\n      _this2.post.Title = _this2.checkoutForm.value.title;\n      _this2.post.Content = _this2.checkoutForm.value.content;\n      _this2.post.CreatedAt = _this2.checkoutForm.value.createAt;\n      _this2.post.Status = _this2.checkoutForm.value.status;\n      _this2.post.Author = _this2.checkoutForm.value.autor;\n      const data = _this2.checkoutForm.value;\n      console.table(data);\n      console.log(_this2.editMode);\n      //Add and Update post\n      if (_this2.editMode === true) {\n        try {\n          yield _this2.postService.UpdatePost(_this2.postId.toString(), data);\n          alert(\"Update Successful\");\n          _this2.checkoutForm.reset();\n          // this.router.navigate(['home']);\n        } catch (error) {\n          console.log(error);\n          alert(\"Update Failed\");\n        }\n      } else {\n        try {\n          console.log(data);\n          yield _this2.postService.SendPost(data);\n          alert(\"Registration Successful\");\n        } catch (error) {\n          console.log(error);\n          alert(\"Registration Failed\");\n        }\n        _this2.checkoutForm.reset();\n      }\n    })();\n  }\n}\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  features: [i0.ɵɵProvidersFeature([PostService])],\n  decls: 26,\n  vars: 12,\n  consts: [[1, \"container\"], [\"novalidate\", \"\", \"method\", \"post\", 1, \"form-post\", 3, \"formGroup\", \"ngSubmit\"], [1, \"tilte\", \"form-group\", 3, \"ngClass\"], [\"for\", \"title\", 1, \"sr-only\"], [\"name\", \"title\", \"type\", \"text\", \"id\", \"title\", \"placeholder\", \"User Name\", \"formControlName\", \"title\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"help-block\", 4, \"ngIf\"], [1, \"content\", \"form-group\", 3, \"ngClass\"], [\"for\", \"content\", 1, \"sr-only\"], [\"name\", \"content\", \"id\", \"content\", \"placeholder\", \"Write here your post\", \"formControlName\", \"content\", \"required\", \"\", 1, \"form-control\"], [\"id\", \"createdAt\", \"type\", \"date\", 1, \"form-control\"], [\"for\", \"author\", 1, \"sr-only\"], [1, \"form-group\"], [1, \"col-md-10\", \"col-md-offset-2\"], [1, \"btn-post\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"routerLink\"], [1, \"help-block\"], [\"class\", \"danger\", 4, \"ngIf\"], [1, \"danger\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"fieldset\")(3, \"div\", 2)(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵtemplate(7, PostComponent_span_7_Template, 2, 1, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"textarea\", 8);\n      i0.ɵɵtext(12, \"                \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, PostComponent_span_13_Template, 2, 1, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 9);\n      i0.ɵɵelementStart(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 11)(20, \"div\", 12)(21, \"span\", 13)(22, \"button\", 14);\n      i0.ɵɵtext(23, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 15);\n      i0.ɵɵtext(25, \" Cancel \");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, (ctx.checkoutForm.get(\"title\").touched || ctx.checkoutForm.get(\"title\").dirty) && !ctx.checkoutForm.get(\"title\").valid));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", (ctx.checkoutForm.get(\"title\").touched || ctx.checkoutForm.get(\"title\").dirty) && ctx.checkoutForm.get(\"title\").errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, (ctx.checkoutForm.get(\"content\").touched || ctx.checkoutForm.get(\"content\").dirty) && !ctx.checkoutForm.get(\"content\").valid));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.checkoutForm.get(\"content\").touched || ctx.checkoutForm.get(\"content\").dirty) && ctx.checkoutForm.get(\"content\").errors);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", !ctx.checkoutForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(11, _c1));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".row[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    margin-left: 90px;\\r\\n}\\r\\n\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n    margin-left: 100px;\\r\\n    margin-right: 100px;\\r\\n    width: 75%;\\r\\n   \\r\\n}\\r\\n\\r\\n.sr-only[_ngcontent-%COMP%]{\\r\\n    margin-left: 100px;\\r\\n}\\r\\n\\r\\n.btn-default[_ngcontent-%COMP%]{\\r\\n    background-color: gray;\\r\\n    color: aliceblue;\\r\\n}\\r\\n\\r\\n.btn-post[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n.danger[_ngcontent-%COMP%]{\\r\\n    color: red;\\r\\n    margin-left: 100px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsVUFBVTs7QUFFZDs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHlCQUF5QjtBQUM3QjtBQUNBO0lBQ0ksVUFBVTtJQUNWLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi1sZWZ0OiA5MHB4O1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMDBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMTAwcHg7XHJcbiAgICB3aWR0aDogNzUlO1xyXG4gICBcclxufVxyXG5cclxuLnNyLW9ubHl7XHJcbiAgICBtYXJnaW4tbGVmdDogMTAwcHg7XHJcbn1cclxuXHJcbi5idG4tZGVmYXVsdHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbiAgICBjb2xvcjogYWxpY2VibHVlO1xyXG59XHJcblxyXG4uYnRuLXBvc3R7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn1cclxuLmRhbmdlcntcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBtYXJnaW4tbGVmdDogMTAwcHg7XHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Post","PostService","Router","i0","PostComponent","constructor","fb","postService","activatedRoute","Date","now","today","checkoutForm","group","id","title","content","createdAt","date","status","author","ngOnInit","params","subscribe","undefined","editMode","postId","Number","getDataById","toString","getPosts","resp","getDataForm","error","console","data","patchValue","onSubmit","post","Id","value","Title","Content","CreatedAt","createAt","Status","Author","autor","table","log","UpdatePost","alert","reset","SendPost","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Roberth\\BlogEngineFront\\src\\components\\post\\post.component.ts","C:\\Users\\Roberth\\BlogEngineFront\\src\\components\\post\\post.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Post } from 'src/models/post.model';\nimport { IPost } from './post.class';\nimport { PostService } from '../../services/post.service';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n  providers:[PostService]\n})\nexport class PostComponent implements OnInit {\n\n  checkoutForm: any;\n  post: Post = new Post();\n  router: Router = new Router;\n  editMode: boolean = false;\n  postId!: number;\n  today = Date.now()\n  date: Date = new Date(this.today);\n\n constructor(\n  private fb: FormBuilder,\n  private postService: PostService,\n  private activatedRoute: ActivatedRoute\n  ) {\n      this.checkoutForm = this.fb.group({\n        id:0,\n        title: \"\",\n        content: \"\",\n        createdAt: this.date,\n        status: \"Created\",\n        author: \"\"\n        \n       });\n   }\n\n ngOnInit(){ \n  this.activatedRoute.params.subscribe(params => {\n    if(params['id'] === undefined){\n      return;\n    }\n      this.editMode = true;\n      this.postId = Number(params['id']);\n      this.getDataById(this.postId.toString())\n      \n   })\n  }\n  \n  public async getDataById(id: string) {\n    //console.log(id);\n    (await this.postService.getPosts(id)).subscribe(\n      (resp: any)=> {\n      this.getDataForm(resp), \n        (error: any) => console.error(error)\n    })\n  }\n\n  getDataForm(data: any) {\n    //var dp = new DatePipe(navigator.language);\n    //var format = \"dd-MM-yyyy\";\n    this.checkoutForm.patchValue({\n      id: data.id,\n      title: data.title,\n      content: data.content,\n      createdAt: data.createdAt,\n      status: data.status,\n      author: data.author,\n     \n    });\n  }\n\n  async onSubmit(){\n    //Process fillout data here\n    this.post.Id = this.checkoutForm.value.id;\n    this.post.Title = this.checkoutForm.value.title;\n    this.post.Content = this.checkoutForm.value.content;\n    this.post.CreatedAt = this.checkoutForm.value.createAt;\n    this.post.Status = this.checkoutForm.value.status;\n    this.post.Author = this.checkoutForm.value.autor;\n    \n    const data = this.checkoutForm.value;\n\n    console.table(data);\n    console.log(this.editMode);\n    \n    //Add and Update post\n    if(this.editMode === true)\n    {   \n      try {\n        await this.postService.UpdatePost(this.postId.toString(), data);\n        alert(\"Update Successful\");\n        this.checkoutForm.reset();\n       // this.router.navigate(['home']);\n        \n      } catch (error) {\n        console.log(error);\n        alert(\"Update Failed\");\n      }\n\n    } else {\n\n      try{\n        console.log(data);\n        \n        await this.postService.SendPost(data);\n        alert(\"Registration Successful\");\n      }\n        catch (error) {\n        console.log(error);\n        alert(\"Registration Failed\");\n      }\n      this.checkoutForm.reset();\n    }\n  }\n}\n\n","<div class=\"container\">\n    <form [formGroup]=\"checkoutForm\" class=\"form-post\" novalidate (ngSubmit)=\"onSubmit()\" method=\"post\">\n        <fieldset>\n            <div class=\"tilte form-group\"\n                  [ngClass]=\"{'has-error' : (checkoutForm.get('title').touched || checkoutForm.get('title').dirty) && !checkoutForm.get('title').valid}\">\n                <label for=\"title\" class=\"sr-only\">Title</label>\n                <input name=\"title\" type=\"text\" id=\"title\" class=\"form-control\" placeholder=\"User Name\" formControlName=\"title\" \n                    required >\n                <span class=\"help-block\" *ngIf=\"(checkoutForm.get('title').touched || checkoutForm.get('title').dirty) && checkoutForm.get('title').errors\">\n                    <span *ngIf=\"checkoutForm.get('title').errors.required\" class=\"danger\">\n                        Field tilte is required\n                    </span> \n                </span>\n            </div>\n\n            <div class=\"content form-group\"\n                [ngClass]=\"{'has-error' : (checkoutForm.get('content').touched || checkoutForm.get('content').dirty) && !checkoutForm.get('content').valid}\">\n                <label for=\"content\" class=\"sr-only\">Content</label>\n                <textarea name=\"content\" id=\"content\" class=\"form-control\" placeholder=\"Write here your post\"  formControlName=\"content\" required >\n                </textarea>\n                <span class=\"help-block\" *ngIf=\"(checkoutForm.get('content').touched || checkoutForm.get('content').dirty) && checkoutForm.get('content').errors\">\n                    <span *ngIf=\"checkoutForm.get('content').errors.required\" class=\"danger\">\n                        Field content is required\n                    </span> \n                </span>\n            </div>\n\n                <label for=\"content\" class=\"sr-only\">Date</label>\n                <input id=\"createdAt\" type=\"date\" class=\"form-control\" />\n                <label for=\"author\" class=\"sr-only\">Author</label>\n\n                <div class=\"form-group\">\n                    <div class=\"col-md-10 col-md-offset-2\">\n                        <span class=\"btn-post\">\n                            <button class=\"btn btn-primary\" type=\"submit\"[disabled]=\"!checkoutForm.valid\" >\n                                Save\n                            </button>\n\n                            <button class=\"btn btn-default\" type=\"button\" [routerLink]='[\"/home\"]'>\n                                Cancel\n                            </button>\n                        </span>\n                    </div>\n                </div>\n        </fieldset>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
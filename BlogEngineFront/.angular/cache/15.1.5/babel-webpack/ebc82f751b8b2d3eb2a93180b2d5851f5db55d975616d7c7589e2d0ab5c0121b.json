{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Roberth/BlogEngineFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { url_api } from \"src/app/app-constants\";\nimport { Router } from \"@angular/router\";\nimport { User } from \"src/models/User.modes\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class LoginService {\n  constructor(http, cookies) {\n    this.http = http;\n    this.cookies = cookies;\n    this.user = new User();\n  }\n  validateUser(UserName, Password, listUsers) {\n    const routeHome = new Router();\n    ;\n    for (let i = 0; i < listUsers.length; i++) {\n      if (listUsers[i].UserName === UserName && listUsers[i].Password === Password) {\n        alert(\"Login Successful\");\n        routeHome.navigateByUrl('/home');\n      } else {\n        alert(\"Login Failed\");\n        routeHome.navigateByUrl('/login');\n      }\n    }\n  }\n  listUsers() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield _this.http.get(`${url_api}/api/Users`).subscribe();\n    })();\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,IAAI,QAAQ,uBAAuB;;;;AAK1C,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAgB,EAAUC,OAAsB;IAAhD,SAAI,GAAJD,IAAI;IAAsB,YAAO,GAAPC,OAAO;IADrD,SAAI,GAAS,IAAIJ,IAAI,EAAE;EACgD;EAEvEK,YAAY,CAACC,QAAgB,EAAEC,QAAgB,EAAEC,SAAsB;IACnE,MAAMC,SAAS,GAAW,IAAIV,MAAM;IAAC;IAErC,KAAI,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAID,CAAC,EAAE,EAAE;MAC1C,IAAGF,SAAS,CAACE,CAAC,CAAC,CAACJ,QAAQ,KAAKA,QAAQ,IAAIE,SAAS,CAACE,CAAC,CAAC,CAACH,QAAQ,KAAKA,QAAQ,EAAC;QAC1EK,KAAK,CAAC,kBAAkB,CAAC;QACzBH,SAAS,CAACI,aAAa,CAAC,OAAO,CAAC;OACjC,MAAM;QACLD,KAAK,CAAC,cAAc,CAAC;QACrBH,SAAS,CAACI,aAAa,CAAC,QAAQ,CAAC;;;EAIvC;EAEEL,SAAS;IAAA;IAAA;MAEb,aAAa,KAAI,CAACL,IAAI,CAACW,GAAG,CAAC,GAAGhB,OAAO,YAAY,CAAC,CAACiB,SAAS,EAAE;IAAC;EAEjE;;AAvBad,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAe,SAAZf,YAAY;EAAAgB,YAFX;AAAM","names":["url_api","Router","User","LoginService","constructor","http","cookies","validateUser","UserName","Password","listUsers","routeHome","i","length","alert","navigateByUrl","get","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Roberth\\BlogEngineFront\\src\\services\\login.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { CookieService } from \"ngx-cookie-service\";\r\nimport { UserInterface } from '../components/register/register.class';\r\nimport { url_api } from \"src/app/app-constants\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"src/models/User.modes\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class LoginService {\r\n    user: User = new User();\r\n    constructor(private http: HttpClient, private cookies: CookieService) {}\r\n\r\n    validateUser(UserName: string, Password: string, listUsers: Array<User>)  {\r\n        const routeHome: Router = new Router;;\r\n        \r\n        for(let i = 0; i < listUsers.length  ; i++) {\r\n          if(listUsers[i].UserName === UserName && listUsers[i].Password === Password){\r\n            alert(\"Login Successful\");\r\n            routeHome.navigateByUrl('/home');\r\n          } else {\r\n            alert(\"Login Failed\");\r\n            routeHome.navigateByUrl('/login');\r\n          }\r\n    \r\n        }\r\n      }\r\n\r\n  async listUsers() {\r\n    \r\n    return await this.http.get(`${url_api}/api/Users`).subscribe();\r\n    \r\n  }\r\n}\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}
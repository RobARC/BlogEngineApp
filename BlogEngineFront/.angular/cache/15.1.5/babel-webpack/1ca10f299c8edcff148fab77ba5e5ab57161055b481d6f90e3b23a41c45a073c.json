{"ast":null,"code":"import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nexport class JwtInterceptorInterceptor {\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n  }\n  intercept(req, next) {\n    req = req.clone({\n      withCredentials: true\n    });\n    return next.handle(req);\n  }\n}\nJwtInterceptorInterceptor.ɵfac = function JwtInterceptorInterceptor_Factory(t) {\n  return new (t || JwtInterceptorInterceptor)(i0.ɵɵinject(i1.CookieService));\n};\nJwtInterceptorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: JwtInterceptorInterceptor,\n  factory: JwtInterceptorInterceptor.ɵfac\n});\nexport const httpInterceptorProvider = [{\n  proviude: HTTP_INTERCEPTORS,\n  useClass: JwtInterceptorInterceptor,\n  multi: true\n}];","map":{"version":3,"mappings":"AACA,SAKEA,iBAAiB,QACZ,sBAAsB;;;AAK7B,OAAM,MAAOC,yBAAyB;EAGpCC,YACUC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;EACpB;EAEHC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAEhDD,GAAG,GAAGA,GAAG,CAACE,KAAK,CAAC;MACdC,eAAe,EAAE;KAClB,CAAC;IAEF,OAAOF,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC;EAEzB;;AAfWJ,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;SAAzBA,yBAAyB;EAAAS,SAAzBT,yBAAyB;AAAA;AAiBtC,OAAO,MAAMU,uBAAuB,GAAG,CACrC;EAACC,QAAQ,EAAEZ,iBAAiB;EAAEa,QAAQ,EAAEZ,yBAAyB;EAAEa,KAAK,EAAE;AAAI,CAAC,CAChF","names":["HTTP_INTERCEPTORS","JwtInterceptorInterceptor","constructor","cookieService","intercept","req","next","clone","withCredentials","handle","factory","httpInterceptorProvider","proviude","useClass","multi"],"sourceRoot":"","sources":["C:\\Users\\Roberth\\BlogEngineFront\\src\\services\\jwt-interceptor.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable()\nexport class JwtInterceptorInterceptor implements HttpInterceptor {\n  \n\n  constructor(\n    private cookieService: CookieService \n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    req = req.clone({\n      withCredentials: true,\n    });\n\n    return next.handle(req);\n   \n  }\n}\nexport const httpInterceptorProvider = [\n  {proviude: HTTP_INTERCEPTORS, useClass: JwtInterceptorInterceptor, multi: true},\n];"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
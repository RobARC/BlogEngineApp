{"ast":null,"code":"import { User } from 'src/models/User.modes';\nimport { LoginService } from 'src/services/login.services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/services/login.services\";\nexport class LoginComponent {\n  constructor(fb, loginService) {\n    this.fb = fb;\n    this.loginService = loginService;\n    this.user = new User();\n    this.checkLoginForm = fb.group({\n      userId: 0,\n      userName: \"\",\n      password: \"\"\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    // Process fillout data here\n    this.user.UserName = this.checkLoginForm.value.userName;\n    this.user.UserId = this.checkLoginForm.value.userId;\n    this.user.Password = this.checkLoginForm.value.password;\n    const data = this.checkLoginForm.value;\n    try {\n      this.loginService.login(this.user.UserId);\n      if (this.user.UserId > 0) {\n        console.log(\"Login successful\");\n        this.router.navigateByUrl('/');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    this.checkLoginForm.reset();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  features: [i0.ɵɵProvidersFeature([LoginService])],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"container\"], [\"method\", \"post\", 1, \"form-signin\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-signin-heading\"], [\"for\", \"inputEmail\", 1, \"sr-only\"], [\"name\", \"userName\", \"type\", \"text\", \"id\", \"inputUser\", \"placeholder\", \"User Name\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\"], [\"for\", \"inputPassword\", 1, \"sr-only\"], [\"name\", \"password\", \"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"h2\", 2);\n      i0.ɵɵtext(3, \"Please Sing up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Sign in\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkLoginForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective],\n  styles: [\".form-signin[_ngcontent-%COMP%] {\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   .form-signin-heading[_ngcontent-%COMP%], .form-signin[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%] {\\r\\n    font-weight: 400;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    box-sizing: border-box;\\r\\n    height: auto;\\r\\n    padding: 10px;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus {\\r\\n    z-index: 2;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%] {\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-right-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\\r\\n  .form-signin[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    border-top-right-radius: 0;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGNBQWM7RUFDaEI7RUFDQTs7SUFFRSxtQkFBbUI7RUFDckI7RUFDQTtJQUNFLGdCQUFnQjtFQUNsQjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osYUFBYTtJQUNiLGVBQWU7RUFDakI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3Qiw0QkFBNEI7RUFDOUI7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsMEJBQTBCO0VBQzVCIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tc2lnbmluIHtcclxuICAgIG1heC13aWR0aDogMzMwcHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiAuZm9ybS1zaWduaW4taGVhZGluZyxcclxuICAuZm9ybS1zaWduaW4gLmNoZWNrYm94IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiAuY2hlY2tib3gge1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICB9XHJcbiAgLmZvcm0tc2lnbmluIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiAuZm9ybS1jb250cm9sOmZvY3VzIHtcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLTFweDtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcclxuICB9XHJcbiAgLmZvcm0tc2lnbmluIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcclxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,YAAY,QAAQ,6BAA6B;;;;AAU1D,OAAM,MAAOC,cAAc;EAKzBC,YACUC,EAAe,EACfC,YAA0B;IAD1B,OAAE,GAAFD,EAAE;IACF,iBAAY,GAAZC,YAAY;IALtB,SAAI,GAAS,IAAIL,IAAI,EAAE;IAOrB,IAAI,CAACM,cAAc,GAAGF,EAAE,CAACG,KAAK,CAAC;MAC7BC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACZ,CAAC;EACH;EAEAC,QAAQ,IAAW;EAEnBC,QAAQ;IACN;IACA,IAAI,CAACC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACR,cAAc,CAACS,KAAK,CAACN,QAAQ;IACvD,IAAI,CAACI,IAAI,CAACG,MAAM,GAAG,IAAI,CAACV,cAAc,CAACS,KAAK,CAACP,MAAM;IACnD,IAAI,CAACK,IAAI,CAACI,QAAQ,GAAG,IAAI,CAACX,cAAc,CAACS,KAAK,CAACL,QAAQ;IAEvD,MAAMQ,IAAI,GAAG,IAAI,CAACZ,cAAc,CAACS,KAAK;IAEtC,IAAI;MACF,IAAI,CAACV,YAAY,CAACc,KAAK,CAAC,IAAI,CAACN,IAAI,CAACG,MAAM,CAAE;MAExC,IAAG,IAAI,CAACH,IAAI,CAACG,MAAM,GAAG,CAAC,EAAC;QACtBI,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAE/B,IAAI,CAACC,MAAM,CAACC,aAAa,CAAC,GAAG,CAAC;;KAInC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;;IAEpB,IAAI,CAAClB,cAAc,CAACmB,KAAK,EAAE;EAE7B;;AAzCWvB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAwB;EAAAC,iCAFd,CAAC1B,YAAY,CAAC;EAAA2B;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,8BAAuB;MACoCA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC1ED,6BAAgC;MAAAA,8BAAc;MAAAA,iBAAK;MACnDA,gCAAwC;MAAAA,yBAAS;MAAAA,iBAAQ;MACzDA,2BACc;MACdA,gCAA2C;MAAAA,wBAAQ;MAAAA,iBAAQ;MAC3DA,2BAA+G;MAC/GA,kCAA+D;MAAAA,wBAAO;MAAAA,iBAAS;;;MAP7EA,eAA4B;MAA5BA,8CAA4B","names":["User","LoginService","LoginComponent","constructor","fb","loginService","checkLoginForm","group","userId","userName","password","ngOnInit","onSubmit","user","UserName","value","UserId","Password","data","login","console","log","router","navigateByUrl","error","reset","selectors","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Roberth\\BlogEngineFront\\src\\components\\login\\login.component.ts","C:\\Users\\Roberth\\BlogEngineFront\\src\\components\\login\\login.component.html"],"sourcesContent":["import { Component , OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder } from '@angular/forms';\nimport { User } from 'src/models/User.modes';\nimport { LoginService } from 'src/services/login.services';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [LoginService],\n})\nexport class LoginComponent {\n  checkLoginForm: any;\n  user: User = new User();\n  router: any;\n\n  constructor (\n    private fb: FormBuilder,\n    private loginService: LoginService,\n  ) {\n    this.checkLoginForm = fb.group({\n      userId: 0,\n      userName: \"\",\n      password: \"\",\n   });\n  }\n\n  ngOnInit(): void { };\n\n  onSubmit() {\n    // Process fillout data here\n    this.user.UserName = this.checkLoginForm.value.userName;\n    this.user.UserId = this.checkLoginForm.value.userId;\n    this.user.Password = this.checkLoginForm.value.password;\n\n    const data = this.checkLoginForm.value\n\n    try {\n      this.loginService.login(this.user.UserId );\n     \n        if(this.user.UserId > 0){\n          console.log(\"Login successful\");\n\n          this.router.navigateByUrl('/');\n          \n        }\n\n    } catch (error) {\n      console.log(error);\n    }\n    this.checkLoginForm.reset()\n\n  }\n\n  \n\n}\n","<div class=\"container\">\n    <form [formGroup]=\"checkLoginForm\" class=\"form-signin\" (ngSubmit)=\"onSubmit()\" method=\"post\">\n        <h2 class=\"form-signin-heading\">Please Sing up</h2>\n        <label for=\"inputEmail\" class=\"sr-only\">User Name</label>\n        <input name=\"userName\" type=\"text\" id=\"inputUser\" class=\"form-control\" placeholder=\"User Name\" required\n            autofocus>\n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n        <input name=\"password\" type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
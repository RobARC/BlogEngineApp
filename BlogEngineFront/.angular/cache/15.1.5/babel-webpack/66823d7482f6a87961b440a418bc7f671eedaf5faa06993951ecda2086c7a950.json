{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction PostComponent_span_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The field Title is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, PostComponent_span_10_span_1_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formGroup.get(\"title\").erros.required);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"has-error\": a0\n  };\n};\nexport class PostComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.formGroup = this.fb.group({\n      title: \"\",\n      content: \"\",\n      createAt: \"\",\n      status: \"\",\n      autor: \"\",\n      comment: []\n    });\n  }\n  Save() {}\n}\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"container\"], [\"novalidate\", \"\", 1, \"form-post\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", 3, \"ngClass\"], [\"for\", \"titleId\", 1, \"col-md-2\", \"control-label\"], [1, \"col-md-8\"], [\"id\", \"titleId\", \"type\", \"text\", \"formCom\\u00BFntrolName\", \"title\", \"placeholder\", \"User Name\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\"], [\"class\", \"help-block\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"content\", 1, \"sr-only\"], [\"name\", \"contet\", \"id\", \"content\", \"placeholder\", \"Write here your post\", 1, \"form-control\"], [\"id\", \"Creation-Date\", \"type\", \"date\", 1, \"form-control\"], [\"for\", \"author\", 1, \"sr-only\"], [1, \"help-block\"], [4, \"ngIf\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Add Post\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.Save();\n      });\n      i0.ɵɵelementStart(4, \"fieldset\")(5, \"div\", 2)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵtemplate(10, PostComponent_span_10_Template, 2, 1, \"span\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"textarea\", 9);\n      i0.ɵɵelementStart(15, \"label\", 8);\n      i0.ɵɵtext(16, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementStart(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Author\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx.formGroup.get(\"title\").touched || ctx.formGroup.get(\"title\").dirty && !ctx.formGroup.get(\"tilte\").valid));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.formGroup.get(\"title\").touched || ctx.formGroup.get(\"title\").dirty && ctx.formGroup.get(\"tilte\").errors);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective],\n  styles: [\".row[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    margin-left: 90px;\\r\\n}\\r\\n\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n    margin-left: 100px;\\r\\n    margin-right: 100px;\\r\\n    width: 75%;\\r\\n   \\r\\n}\\r\\n\\r\\n.sr-only[_ngcontent-%COMP%]{\\r\\n    margin-left: 100px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsVUFBVTs7QUFFZDs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi1sZWZ0OiA5MHB4O1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMDBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMTAwcHg7XHJcbiAgICB3aWR0aDogNzUlO1xyXG4gICBcclxufVxyXG5cclxuLnNyLW9ubHl7XHJcbiAgICBtYXJnaW4tbGVmdDogMTAwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;IAaoBA,4BAAoD;IAAAA,4CACpD;IAAAA,iBAAO;;;;;IAHXA,gCAC8G;IAC1GA,yEACO;IACXA,iBAAO;;;;IAFIA,eAA2C;IAA3CA,mEAA2C;;;;;;;;ACJtE,OAAM,MAAOC,aAAa;EAEzBC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;EAAiB;EAIvCC,QAAQ;IACP,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;KAET,CAAC;EACH;EAEAC,IAAI,IAAU;;AAlBHZ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT1BlB,8BAAuB;MACfA,wBAAQ;MAAAA,iBAAK;MACjBA,+BAA+E;MAA5CA;QAAA,OAAYmB,UAAM;MAAA,EAAC;MAClDnB,gCAAU;MAI8CA,qBAAK;MAAAA,iBAAQ;MACjEA,8BAAsB;MAClBA,2BACc;MACdA,kEAIO;MACXA,iBAAM;MAGVA,+BAAyB;MACgBA,wBAAO;MAAAA,iBAAQ;MACpDA,+BAC8C;MAE9CA,iCAAqC;MAAAA,qBAAI;MAAAA,iBAAQ;MACjDA,6BAA6D;MAC7DA,kCAAoC;MAAAA,uBAAM;MAAAA,iBAAQ;;;MAxBHA,eAAuB;MAAvBA,yCAAuB;MAGlEA,eAA6H;MAA7HA,iKAA6H;MAOxHA,eAAuG;MAAvGA,kIAAuG","names":["i0","PostComponent","constructor","fb","ngOnInit","formGroup","group","title","content","createAt","status","autor","comment","Save","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Roberth\\BlogEngineFront\\src\\components\\post\\post.component.html","C:\\Users\\Roberth\\BlogEngineFront\\src\\components\\post\\post.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h2>Add Post</h2>\n    <form class=\"form-post\" novalidate (ngSubmit)=\"Save()\" [formGroup]=\"formGroup\">\n        <fieldset>\n        <div class=\"form-group\" \n                [ngClass]=\"{'has-error': (formGroup.get('title').touched || formGroup.get('title').dirty && !formGroup.get('tilte').valid)} \">\n\n            <label for=\"titleId\" class=\"col-md-2 control-label\">Title</label>\n            <div class=\"col-md-8\">\n                <input class=\"form-control\" id=\"titleId\" type=\"text\" formCom¿ntrolName=\"title\" placeholder=\"User Name\" required\n                    autofocus>\n                <span class=\"help-block\"\n                    *ngIf=\"(formGroup.get('title').touched || formGroup.get('title').dirty && formGroup.get('tilte').errors)\">\n                    <span *ngIf=\"formGroup.get('title').erros.required\">The field Title is required\n                    </span>\n                </span>\n            </div>\n        </div>\n\n        <div class=\"form-group\" >\n            <label for=\"content\" class=\"sr-only\">Content</label>\n            <textarea name=\"contet\" id=\"content\" class=\"form-control\" \n            placeholder=\"Write here your post\"></textarea>\n            \n            <label for=\"content\" class=\"sr-only\">Date</label>\n            <input id=\"Creation-Date\" type=\"date\" class=\"form-control\" />\n            <label for=\"author\" class=\"sr-only\">Author</label>\n        </div>   \n        \n    </fieldset>\n    </form>\n\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Post } from 'src/models/post.model';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent {\n\n constructor(private fb: FormBuilder) { }\n\n formGroup: FormGroup | any;\n\n ngOnInit(){\n  this.formGroup = this.fb.group({\n    title: \"\",\n    content: \"\",\n    createAt: \"\",\n    status: \"\",\n    autor: \"\",\n    comment: []\n\n   });\n  }\n\n  Save(): void {}\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}